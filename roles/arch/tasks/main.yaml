---
- name: Install Pacman Packages
  community.general.pacman:
    name: "{{ packages }}"
  vars:
    packages:
      - task
      - yazi
      - lf
      - ranger
      - entr # Needed by tmux plugins
      - aspell
      - autogen
      - autoconf
      - make
      - aspell-en
      - weechat
      - chromium
      - pueue # queing service for newsboat
      - kitty
      - kdialog
      - alacritty
      - gopass
      - gopass-jsonapi
      - gopass-hibp
      - gopass-summon-provider
      - lynx
      - w3m
      - isync
      - python-pip
      - python-pipx
      - python-virtualenv
      - python-pyserial
      - neomutt
      - newsboat
      - timew
      - go-yq
      - pandoc
      - glow
      - chezmoi
      - inkscape
      - btop
      - python-pynvim
      - git-delta
      - syncthing
      - wmctrl
      - wl-clipboard
      - automake
      - patch # for compiling tmux
      - boost
      - fprint
      - fprintd
      - kio-admin
      - mpv
      - mpc
      - mpd
      - yt-dlp
      - vorbis-tools
      - yay
      - flatpak
      - npm
      - go
      - rustup
      - pueue
      - plasma-workspace
      - kdegraphics-thumbnailers
      - qt5-imageformats
      - tor
      - torsocks
      - tealdeer
      - rdrview-git
      # - asdf

- name: Create the `aur_builder` user
  become: true
  ansible.builtin.user:
    name: aur_builder
    create_home: true
    group: wheel

- name: Allow the `aur_builder` user to run `sudo pacman` without a password
  become: true
  ansible.builtin.lineinfile:
    path: /etc/sudoers.d/11-install-aur_builder
    line: "aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman"
    create: true
    mode: 0644
    validate: visudo -cf %s

# - name: adding existing "{{ ansible_user }}" to group sudo
#   ansible.builtin.user:
#     name: "{{ ansible_user }}"
#     groups: wheel, input, uinput, debian-tor, tor
#     append: yes
#   become: yes
#

# TODO: What is the propper way to manage a go package?
# - name: Install packages using go
#     command: go install github.com/mrusme/reader@latest

- name: Install packages using yay
  kewlfft.aur.aur:
    use: yay
    name:
      - kwalletcli
      - neovim
      - quickemu
      - taskwarrior-tui-git
      - texlive-full
      - tmatrix-git
      - ueberzugpp
      - taskopen
      - syncthingtray
      - mpdris2
      - ventoy-bin
      - aria2
      - typeracer
      - cura-bin
      - mullvad-vpn-bin
      - stl-thumb-kde
      # - kmonad-bin
      # - quickgui
  become: true
  become_user: aur_builder

# - name: Install package from AUR yay
#   community.general.pacman:
#     name: "{{ packages }}"
#     state: present
#     executable: yay
#     extra_args: --builddir /var/cache/yay --noconfirm
#   vars:
#     packages:
#       - kwalletcli
#       - kmonad-bin
#       - neovim
#       - quickemu
#       - taskwarrior-tui-git
#       - texlive-full
#       - tmatrix-git
#       - ueberzugpp
#       - taskopen
#       - syncthingtray
#       - mpdris2
#       - quickgui
#       - aria2
#       - cura

# - name: Install package from AUR using a Pacman compatible AUR helper
#   community.general.pacman:
#     name: ueberzugpp
#     state: present
#     executable: yay
#     extra_args: --builddir /var/cache/yay

- name: Start and enable Pueue Service
  ansible.builtin.systemd_service:
    name: pueued
    state: started
    enabled: true
    scope: user
  become: true
  become_user: rain

- name: Start and enable Tor Service
  ansible.builtin.systemd_service:
    name: tor
    state: started
    enabled: true
  become: true

- name: Start and enable MpDris2 Service
  ansible.builtin.systemd_service:
    name: mpDris2
    state: started
    enabled: true
    scope: user
  become: true
  become_user: rain
# - name: Start and enable MpDris2-rs Service
#   ansible.builtin.systemd_service:
#     name: mpdris2-rs
#     state: started
#     enabled: true
#     scope: user
#   become: true
#   become_user: rain
